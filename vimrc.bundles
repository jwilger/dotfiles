if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

call plug#begin('~/.vim/bundle')
Plug 'Shougo/deoplete.nvim'
Plug 'Valloric/ListToggle' "toggle quick and location lists
Plug 'airblade/vim-gitgutter'
Plug 'altercation/vim-colors-solarized'
Plug 'andyl/vim-projectionist-elixir'
Plug 'c-brenn/phoenix.vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'janko-m/vim-test'
Plug 'jlanzarotta/bufexplorer'
Plug 'jreybert/vimagit'
Plug 'ludovicchabant/vim-gutentags'
Plug 'ngmy/vim-rubocop'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'}
Plug 'sheerun/vim-polyglot'
Plug 'slashmili/alchemist.vim'
Plug 'tpope/vim-bundler' "Ruby Bundler support
Plug 'tpope/vim-commentary' "toggle comment lines with gc
Plug 'tpope/vim-dispatch' "tmux/vim integration
Plug 'tpope/vim-endwise' "auto-insert closing 'end' statements
Plug 'tpope/vim-eunuch' "Unix file manipulation like :Delete or :Move
Plug 'tpope/vim-projectionist' "project config
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-rbenv'
Plug 'tpope/vim-repeat' "enable . repeating of plugin commands
Plug 'tpope/vim-sleuth' "autodetect tab/indent settings
Plug 'tpope/vim-surround' "enable cs for change surround
Plug 'tpope/vim-unimpaired' "lots of toggles prefixed with [ and ]
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'w0rp/ale'
call plug#end()
